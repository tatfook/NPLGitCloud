<?npl
include_once("./user/tasks.page");

NPL.load("(gl)script/ide/Files.lua");

api_server_addr = "https://api.github.com";

local function get_access_token_from_request()
    local token = request:get("access_token");
    if (token) then
        return token;
    end
    local auth = request:header("Authorization");
    if (auth) then
        local result = auth:gsub("%w+%s+", "");
        return result;
    end
    return nil;
end

function not_found()
    local body = {
        message = "Not Found",
        documentation_url = "https://developer.github.com/v3"
    };
    response:status(404):send_json(body);
end

function no_content()
    response:status(204):send();
end

function invalid_json_fields(message, errors)
    local body = {
        message = message,
        errors = errors
    };
    response:status(422):send_json(body);
end

function login_failed()
    local body = {
        message = "Bad Credentials"
    };
    response:status(401):send_json(body);
end

function delete_failed()
    local body = {
        message = "Failed to Delete File"
    };
    response:status(400):send_json(body);
end

function update_failed()
    local body = {
        message = "Failed to Add/Update File"
    };
    response:status(400):send_json(body);
end

function get_url_without_params()
    return request:url():match("^[^%?]*");
end

function auth_access_token()
    local token = get_access_token_from_request();
    log("access token: " .. tostring(token));
    if (not token) then
        return false;
    end
    local user = get_user_by_access_token(token);
    log("match user: " .. tostring(user));
    if (not user or get_url_without_params():match("^/repos") and user ~= get_url_without_params():match("^/repos/([^/]+)/[^/]+[%(/.*)]?")) then
        return false;
    end
    log("authenticated user: " .. user);
    return user;
end
?>

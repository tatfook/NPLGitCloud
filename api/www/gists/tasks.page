<?npl
include_once("../tasks.page");
include_once("../users/tasks.page");

NPL.load("(gl)script/ide/System/Database/TableDatabase.lua");
local TableDatabase = commonlib.gettable("System.Database.TableDatabase");
local db = TableDatabase:new():connect("nplgitcloud/db/", function() end);

function get_gist_files_db(file)
    return {
        size = get_file_size(file["filename"]),
        raw_url = file["raw_url"],
        type = "text/plain",
        truncated = file["truncated"],
        language = file["language"]
    };
end

function get_gist_files_by_id(gist_id)
    local results = {}
    db.GistFiles:find({ gist = gist_id }, function(err, rows)
        for i = 1, #rows do
            results[rows[i]["filename"]] = get_gist_files_db(rows[i]);
        end
    end);
    return results;
end

function get_gist_db(gist)
    return {
        url = API_ADDR .. "/gists/" .. gist["id"],
        forks_url = API_ADDR .. "/gists/" .. gist["id"] .. "/forks",
        commits_url = API_ADDR .. "/gists/" .. gist["id"] .. "/commits",
        id = gist["id"],
        description = gist["description"],
        public = gist["public"],
        owner = get_user_by_username(gist["id"]),
        user = gist["user"],
        files = get_gist_files_by_id(gist["id"]),
        truncated = gist["truncated"],
        comments = gist["comments"],
        comments_url = API_ADDR .. "/gists/" .. gist["id"] .. "/comments",
        html_url = GIST_ADDR .. "/" .. gist["id"],
        git_pull_url = GIST_ADDR .. "/" .. gist["id"] .. ".git",
        git_push_url = GIST_ADDR .. "/" .. gist["id"] .. ".git",
        created_at = gist["created_at"],
        updated_at = gist["updated_at"]
    };
end

function get_public_gists_since(since, page, per_page)
    local results = {};
    db.Gists:find({ ["-public+update_at"] = { true, gt = since, limit = per_page, skip = (page - 1) * per_page } }, function(err, rows)
        for i = 1, #rows do
            results[i] = get_gist_db(rows[i]);
        end
    end);
    return results;
end

function get_public_gists_count_since(since)
    local count;
    db.Gists:count({ ["-public+update_at"] = { true, gt = since } }, function(err, rows) count = rows; end);
    return count;
end

function get_public_gists_count_by_username(username)
    local count;
    db.Gists:count({ owner = username, public = true }, function(err, rows) count = rows; end);
    return count;
end
?>

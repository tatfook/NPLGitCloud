<?npl
include_once("./followers/tasks.page");
include_once("../gists/tasks.page");
include_once("../repos/tasks.page");

NPL.load("(gl)script/ide/System/Database/TableDatabase.lua");
local TableDatabase = commonlib.gettable("System.Database.TableDatabase");
local db = TableDatabase:new():connect("nplgitcloud/db/", function() end);

function get_user_db(user)
    return {
        login = user["login"],
        id = user["_id"],
        avatar_url = user["avatar_url"],
        gravatar_id = user["gravatar_id"],
        url = API_ADDR .. "/users/" .. user["login"],
        html_url = WEB_ADDR .. "/" .. user["login"],
        followers_url = API_ADDR .. "/users/" .. user["login"] .. "/followers",
        following_url = API_ADDR .. "/users/" .. user["login"] .. "/following{/other_user}",
        gists_url = API_ADDR .. "/users/" .. user["login"] .. "/gists{/gist_id}",
        starred_url = API_ADDR .. "/users/" .. user["login"] .. "/starred{/owner}{/repo}",
        subscriptions_url = API_ADDR .. "/users/" .. user["login"] .. "/subscriptions",
        organizations_url = API_ADDR .. "/users/" .. user["login"] .. "/orgs",
        repos_url = API_ADDR .. "/users/" .. user["login"] .. "/repos",
        events_url = API_ADDR .. "/users/" .. user["login"] .. "/events{/privacy}",
        received_events_url = API_ADDR .. "/users/" .. user["login"] .. "/received_events",
        type = "User",
        site_admin = user["site_admin"]
    };
end

function add_public_info(info, record)
    info["name"] = record["name"];
    info["company"] = record["company"];
    info["blog"] = record["blog"];
    info["location"] = record["location"];
    info["email"] = record["email"];
    info["hireable"] = record["hireable"];
    info["bio"] = record["bio"];
    local username = record["login"];
    info["public_repos"] = get_public_repos_count_by_username(username);
    info["public_gists"] = get_public_gists_count_by_username(username);
    info["followers"] = get_followers_count_by_username(username);
    info["following"] = get_following_count_by_username(username);
    info["created_at"] = record["created_at"];
    info["updated_at"] = record["updated_at"];
end

function get_user_by_username(username)
    local record;
    db.Users:findOne({ login = username }, function(err, user) record = user; end);
    return get_user_db(record);
end

function get_user_public_by_username(username)
    local record;
    db.Users:findOne({ login = username }, function(err, user) record = user; end);
    local info = get_user_db(record);
    add_public_info(info, record);
    return info;
end
?>

<?npl
include_once("../user/tasks.page");
include_once("../tasks.page");

NPL.load("(gl)script/ide/System/Database/TableDatabase.lua");
local TableDatabase = commonlib.gettable("System.Database.TableDatabase");
local db = TableDatabase:new():connect("db/", function() end);

local function get_size_by_repo(repo)
    local files = get_files_by_repo(repo);
    local size = 0;
    for i = 1, #files do
        size = size + get_file_size(repo .. "/" .. files[i]);
    end
    return size;
end

local function get_repo_from_db(record)
    local fullname = record["owner"] .. "/" .. record["name"];
    local result = {
        id = record["_id"],
        owner = get_user_by_username(record["owner"]),
        name = record["name"],
        full_name = fullname,
        description = "",
        private = false,
        fork = true,
        url = api_server_addr .. "/repos/" .. fullname,
        contents_url = api_server_addr .. "/repos/" .. fullname .. "/contents/{+path}",
        trees_url = api_server_addr .. "/repos/" .. fullname .. "/git/trees{/sha}",
        language = nil,
        fork_count = 0,
        stargazers_count = 0,
        size = get_size_by_repo(fullname),
        default_branch = "master",
        open_issue_count = 0,
        has_issues = true,
        has_wiki = true,
        has_pages = false,
        has_downloads = true,
        pushed_at = record["pushed_at"],
        created_at = record["created_at"],
        updated_at = record["updated_at"],
        permissions = {
            admin = true,
            push = true,
            pull = true
        }
    };
    return result;
end

function get_repos_by_user(user)
    local repos;
    db.Repo:find({ owner = user }, function(err, records)
        for i = 1, #records do
            table.insert(repos, get_repo_from_db(records[i]));
        end
    end);
    return repos;
end
?>
